generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model apartment {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  owner_id    String?  @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user        user?    @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model huntsearcher {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description           String?                 @db.VarChar(255)
  image                 String?                 @db.VarChar(255)
  name                  String                  @db.VarChar(255)
  created_at            DateTime                @default(now()) @db.Timestamp(6)
  updated_at            DateTime                @default(now()) @db.Timestamp(6)
  user_id               String                  @db.Uuid
  tenant_id             String                  @db.VarChar(255)
  user                  user                    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  huntsearcher_platform huntsearcher_platform[] @ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model huntsearcher_platform {
  huntsearcher_id String?       @db.Uuid
  platform_id     String?       @db.Uuid
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  huntsearcher    huntsearcher? @relation(fields: [huntsearcher_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  platform        platform?     @relation(fields: [platform_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@ignore
}

model platform {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                  String                  @db.VarChar(255)
  url                   String                  @db.VarChar(255)
  created_at            DateTime                @default(now()) @db.Timestamp(6)
  updated_at            DateTime                @default(now()) @db.Timestamp(6)
  huntsearcher_platform huntsearcher_platform[] @ignore
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  apartment    apartment[]
  huntsearcher huntsearcher[]
}
